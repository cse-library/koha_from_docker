.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "C4::SIP::ILS::Patron 3pm"
.TH C4::SIP::ILS::Patron 3pm "2018-08-29" "perl v5.20.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "Methods"
.IX Header "Methods"
.SS "update_lastseen"
.IX Subsection "update_lastseen"
.Vb 1
\&    $patron\->update_lastseen();
\&
\&    Patron method to update lastseen field in borrower
\&    to record that patron has been seen via sip connection
.Ve
.SS "build_patron_attributes_string"
.IX Subsection "build_patron_attributes_string"
This method builds the part of the sip message for extended patron
attributes as defined in the sip config
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 10
\&  our %patron_example = (
\&          djfiander => {
\&              name => "David J. Fiander",
\&              id => \*(Aqdjfiander\*(Aq,
\&              password => \*(Aq6789\*(Aq,
\&              ptype => \*(AqA\*(Aq, # \*(AqA\*(Aqdult.  Whatever.
\&              birthdate => \*(Aq19640925\*(Aq,
\&              address => \*(Aq2 Meadowvale Dr. St Thomas, ON\*(Aq,
\&              home_phone => \*(Aq(519) 555 1234\*(Aq,
\&              email_addr => \*(Aqdjfiander@hotmail.com\*(Aq,
\&              charge_ok => 1,
\&              renew_ok => 1,
\&              recall_ok => 0,
\&              hold_ok => 1,
\&              card_lost => 0,
\&              claims_returned => 0,
\&              fines => 100,
\&              fees => 0,
\&              recall_overdue => 0,
\&              items_billed => 0,
\&              screen_msg => \*(Aq\*(Aq,
\&              print_line => \*(Aq\*(Aq,
\&              items => [],
\&              hold_items => [],
\&              overdue_items => [],
\&              fine_items => [\*(AqComputer Time\*(Aq],
\&              recall_items => [],
\&              unavail_holds => [],
\&              inet => 1,
\&          },
\&  );
\&
\& From borrowers table:
\&+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-+\-\-\-\-\-+\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+
\&| Field               | Type         | Null | Key | Default | Extra          |
\&+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-+\-\-\-\-\-+\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+
\&| borrowernumber      | int(11)      | NO   | PRI | NULL    | auto_increment |
\&| cardnumber          | varchar(16)  | YES  | UNI | NULL    |                |
\&| surname             | mediumtext   | NO   |     | NULL    |                |
\&| firstname           | text         | YES  |     | NULL    |                |
\&| title               | mediumtext   | YES  |     | NULL    |                |
\&| othernames          | mediumtext   | YES  |     | NULL    |                |
\&| initials            | text         | YES  |     | NULL    |                |
\&| streetnumber        | varchar(10)  | YES  |     | NULL    |                |
\&| streettype          | varchar(50)  | YES  |     | NULL    |                |
\&| address             | mediumtext   | NO   |     | NULL    |                |
\&| address2            | text         | YES  |     | NULL    |                |
\&| city                | mediumtext   | NO   |     | NULL    |                |
\&| state               | mediumtext   | YES  |     | NULL    |                |
\&| zipcode             | varchar(25)  | YES  |     | NULL    |                |
\&| country             | text         | YES  |     | NULL    |                |
\&| email               | mediumtext   | YES  |     | NULL    |                |
\&| phone               | text         | YES  |     | NULL    |                |
\&| mobile              | varchar(50)  | YES  |     | NULL    |                |
\&| fax                 | mediumtext   | YES  |     | NULL    |                |
\&| emailpro            | text         | YES  |     | NULL    |                |
\&| phonepro            | text         | YES  |     | NULL    |                |
\&| B_streetnumber      | varchar(10)  | YES  |     | NULL    |                |
\&| B_streettype        | varchar(50)  | YES  |     | NULL    |                |
\&| B_address           | varchar(100) | YES  |     | NULL    |                |
\&| B_address2          | text         | YES  |     | NULL    |                |
\&| B_city              | mediumtext   | YES  |     | NULL    |                |
\&| B_state             | mediumtext   | YES  |     | NULL    |                |
\&| B_zipcode           | varchar(25)  | YES  |     | NULL    |                |
\&| B_country           | text         | YES  |     | NULL    |                |
\&| B_email             | text         | YES  |     | NULL    |                |
\&| B_phone             | mediumtext   | YES  |     | NULL    |                |
\&| dateofbirth         | date         | YES  |     | NULL    |                |
\&| branchcode          | varchar(10)  | NO   | MUL |         |                |
\&| categorycode        | varchar(10)  | NO   | MUL |         |                |
\&| dateenrolled        | date         | YES  |     | NULL    |                |
\&| dateexpiry          | date         | YES  |     | NULL    |                |
\&| gonenoaddress       | tinyint(1)   | YES  |     | NULL    |                |
\&| lost                | tinyint(1)   | YES  |     | NULL    |                |
\&| debarred            | tinyint(1)   | YES  |     | NULL    |                |
\&| contactname         | mediumtext   | YES  |     | NULL    |                |
\&| contactfirstname    | text         | YES  |     | NULL    |                |
\&| contacttitle        | text         | YES  |     | NULL    |                |
\&| guarantorid         | int(11)      | YES  | MUL | NULL    |                |
\&| borrowernotes       | mediumtext   | YES  |     | NULL    |                |
\&| relationship        | varchar(100) | YES  |     | NULL    |                |
\&| ethnicity           | varchar(50)  | YES  |     | NULL    |                |
\&| ethnotes            | varchar(255) | YES  |     | NULL    |                |
\&| sex                 | varchar(1)   | YES  |     | NULL    |                |
\&| password            | varchar(30)  | YES  |     | NULL    |                |
\&| flags               | int(11)      | YES  |     | NULL    |                |
\&| userid              | varchar(30)  | YES  | MUL | NULL    |                |
\&| opacnote            | mediumtext   | YES  |     | NULL    |                |
\&| contactnote         | varchar(255) | YES  |     | NULL    |                |
\&| sort1               | varchar(80)  | YES  |     | NULL    |                |
\&| sort2               | varchar(80)  | YES  |     | NULL    |                |
\&| altcontactfirstname | varchar(255) | YES  |     | NULL    |                |
\&| altcontactsurname   | varchar(255) | YES  |     | NULL    |                |
\&| altcontactaddress1  | varchar(255) | YES  |     | NULL    |                |
\&| altcontactaddress2  | varchar(255) | YES  |     | NULL    |                |
\&| altcontactaddress3  | varchar(255) | YES  |     | NULL    |                |
\&| altcontactstate     | mediumtext   | YES  |     | NULL    |                |
\&| altcontactzipcode   | varchar(50)  | YES  |     | NULL    |                |
\&| altcontactcountry   | text         | YES  |     | NULL    |                |
\&| altcontactphone     | varchar(50)  | YES  |     | NULL    |                |
\&| smsalertnumber      | varchar(50)  | YES  |     | NULL    |                |
\&| privacy             | int(11)      | NO   |     | 1       |                |
\&+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-+\-\-\-\-\-+\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-+
\&
\&
\& From C4::Members
\&
\& $flags\->{KEY}
\& {CHARGES}
\&    {message}     Message showing patron\*(Aqs credit or debt
\&    {noissues}    Set if patron owes >$5.00
\& {GNA}             Set if patron gone w/o address
\&    {message}     "Borrower has no valid address"
\&    {noissues}    Set.
\& {LOST}            Set if patron\*(Aqs card reported lost
\&    {message}     Message to this effect
\&    {noissues}    Set.
\& {DBARRED}         Set if patron is debarred
\&    {message}     Message to this effect
\&    {noissues}    Set.
\& {NOTES}           Set if patron has notes
\&    {message}     Notes about patron
\& {ODUES}           Set if patron has overdue books
\&    {message}     "Yes"
\&    {itemlist}    ref\-to\-array: list of overdue books
\&    {itemlisttext}    Text list of overdue items
\& {WAITING}         Set if there are items available that the patron reserved
\&    {message}     Message to this effect
\&    {itemlist}    ref\-to\-array: list of available items
.Ve
