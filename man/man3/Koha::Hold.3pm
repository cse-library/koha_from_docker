.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Koha::Hold 3pm"
.TH Koha::Hold 3pm "2018-08-29" "perl v5.20.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Koha::Hold \- Koha Hold object class
.SH "API"
.IX Header "API"
.SS "Class Methods"
.IX Subsection "Class Methods"
\fIage\fR
.IX Subsection "age"
.PP
returns the number of days since a hold was placed, optionally
using the calendar
.PP
my \f(CW$age\fR = \f(CW$hold\fR\->age( \f(CW$use_calendar\fR );
.PP
\fIsuspend_hold\fR
.IX Subsection "suspend_hold"
.PP
my \f(CW$hold\fR = \f(CW$hold\fR\->suspend_hold( \f(CW$suspend_until_dt\fR );
.PP
\fIresume\fR
.IX Subsection "resume"
.PP
my \f(CW$hold\fR = \f(CW$hold\fR\->\fIresume()\fR;
.PP
\fIdelete\fR
.IX Subsection "delete"
.PP
\&\f(CW$hold\fR\->\fIdelete()\fR;
.PP
\fIset_waiting\fR
.IX Subsection "set_waiting"
.PP
\fIis_found\fR
.IX Subsection "is_found"
.PP
Returns true if hold is a waiting or in transit
.PP
\fIis_waiting\fR
.IX Subsection "is_waiting"
.PP
Returns true if hold is a waiting hold
.PP
\fIis_in_transit\fR
.IX Subsection "is_in_transit"
.PP
Returns true if hold is a in_transit hold
.PP
\fIis_cancelable_from_opac\fR
.IX Subsection "is_cancelable_from_opac"
.PP
Returns true if hold is a cancelable hold
.PP
Holds may be only canceled if they are not found.
.PP
This is used from the \s-1OPAC.\s0
.PP
\fIis_at_destination\fR
.IX Subsection "is_at_destination"
.PP
Returns true if hold is waiting
and the hold's pickup branch matches
the hold item's holding branch
.PP
\fIbiblio\fR
.IX Subsection "biblio"
.PP
Returns the related Koha::Biblio object for this hold
.PP
\fIitem\fR
.IX Subsection "item"
.PP
Returns the related Koha::Item object for this Hold
.PP
\fIbranch\fR
.IX Subsection "branch"
.PP
Returns the related Koha::Library object for this Hold
.PP
\fIborrower\fR
.IX Subsection "borrower"
.PP
Returns the related Koha::Patron object for this Hold
.PP
\fIis_suspended\fR
.IX Subsection "is_suspended"
.PP
my \f(CW$bool\fR = \f(CW$hold\fR\->\fIis_suspended()\fR;
.PP
\fIcancel\fR
.IX Subsection "cancel"
.PP
my \f(CW$cancel_hold\fR = \f(CW$hold\fR\->\fIcancel()\fR;
.PP
Cancel a hold:
\&\- The hold will be moved to the old_reserves table with a priority=0
\&\- The priority of other holds will be updated
\&\- The patron will be charge (see ExpireReservesMaxPickUpDelayCharge) if the charge_cancel_fee parameter is set
\&\- a \s-1CANCEL HOLDS\s0 log will be done if the pref HoldsLog is on
.PP
\fI_move_to_old\fR
.IX Subsection "_move_to_old"
.PP
my \f(CW$is_moved\fR = \f(CW$hold\fR\->_move_to_old;
.PP
Move a hold to the old_reserve table following the same pattern as Koha::Patron\->move_to_deleted
.PP
\fItype\fR
.IX Subsection "type"
.SH "AUTHORS"
.IX Header "AUTHORS"
Kyle M Hall <kyle@bywatersolutions.com>
.PP
Jonathan Druart <jonathan.druart@bugs.koha\-community.org>
