[% USE Asset %]
[% SET footerjs = 1 %]
<!DOCTYPE html>
[% IF (AllowOfflineCirculation) %]
[% SET manifestattr = 'manifest="/cgi-bin/koha/circ/offline-mf.pl"' %]
[% END %]
[% IF ( bidi && AllowOfflineCirculation ) %]<html lang="[% lang %]" dir="[% bidi %]" manifest="/cgi-bin/koha/circ/offline-mf.pl">
[% ELSIF ( bidi ) %]<html lang="[% lang %]" dir="[% bidi %]">
[% ELSIF ( AllowOfflineCirculation ) %]<html lang="[% lang %]" manifest="/cgi-bin/koha/circ/offline-mf.pl">
[% ELSE %]<html lang="[% lang %]">[% END %]
<head>
<title>Koha &rsaquo; Phân hệ lưu thông</title>
[% INCLUDE 'doc-head-close.inc' %]
</head>

<body id="circ_offline" class="circ">
[% INCLUDE 'header.inc' %]
[% INCLUDE 'circ-search.inc' %]
<div class="loading-overlay" style="display: none;">
 <div>Đang tải cơ sở dữ liệu, bạn vui lòng chờ...</div>
</div>

<div id="breadcrumbs"><a href="/cgi-bin/koha/mainpage.pl">Trang chủ</a> &rsaquo; <a id="go-to-home" href="#offline-home">Lưu thông ngoại tuyến</a></div>

<div id="doc3" class="yui-t2">

 <div id="bd">
 <div id="yui-main">
 <audio id="alert_sound" src="[% interface %]/prog/sound/critical.ogg" preload="auto"></audio>
 <audio id="success_sound" src="[% interface %]/prog/sound/beep.ogg" preload="auto"></audio>

 <div id="alerts" class="yui-b">
 </div>
 [% UNLESS (AllowOfflineCirculation) %]
 <div id="noofflinecircwarning" class="dialog alert">
 <p><strong>Cảnh báo:</strong> CSDL lưu thông ngoại tuyến chưa được đồng bộ. Bạn vẫn có thể tiếp tục quá trình lưu thông, tuy nhiên thông tin về bạn đọc và tài liệu sẽ không sẵn sàng hiển thị.</p>
 </div>
 [% END %]

 <div id="offline-home" class="yui-b offline-home">
 <div class="yui-g">
 <h1>Lưu thông ngoại tuyến</h1>
 <div class="yui-u first">
 <ul>
 <li><a id="go-to-circ" href="#offline-circulation">Ghi mượn</a></li>
 <li><a id="go-to-returns" href="#offline-returns">Ghi Trả</a></li>
 </ul>
 </div>

 <div class="yui-u">
 <p><strong>Chú ý:</strong> Bạn phải kết nối tới máy chủ để sử dụng các tùy chọn này.</p>
 <ul>
 <li><a id="go-to-sync" href="#offline-sync">Đồng bộ dữ liệu</a></li>
 <li><a id="go-to-pending" href="/cgi-bin/koha/offline_circ/list.pl">Thao tác lưu thông ngoại tuyến chờ xử lý</a>
 </ul>
 </div>
 </div>
 </div>

 <div id="offline-sync" style="display: none;" class="yui-b offline-sync">
 <div id="toolbar" class="btn-toolbar">
 [% IF (AllowOfflineCirculation) %]
 <a href="#" id="download-records" class="btn btn-default btn-sm"><i class="fa fa-arrow-down"></i>Tải cơ sở dữ liệu</a>
 [% END %]
 <a href="#" id="upload-transactions" class="btn btn-default btn-sm"><i class="fa fa-arrow-up"></i>Tài lên giao dịch</a>
 </div>
 <div class="yui-g">
 <h1>Lưu thông ngoại tuyến</h1>
 <div class="yui-u first">
 <div id="download-message">
 Để sử sụng tính năng lưu thông ngoại tuyến trên máy trạm này, cơ sở dữ liệu của bạn phải được cập nhật và đồng bộ trên máy trạm: <ul>
 <li>CSDL bạn đọc được đồng bộ lần cuối vào: <span id="patron-timestamp">(đang kiểm tra)</span></li>
 <li>CSDL tài liệu được đồng bộ lần cuối vào: <span id="item-timestamp">(đang kiểm tra)</span></li>
 <li>CSDL lưu thông được đồng bộ lần cuối vào: <span id="issue-timestamp">(đang kiểm tra)</span></li>
 </ul>
 </div>
 </div>

 <div class="yui-u">
 <div id="upload-message">
 </div>
 <div>view <a href="/cgi-bin/koha/offline_circ/list.pl">Thao tác lưu thông ngoại tuyến chờ xử lý</a></div>
 </div>
 </div>
 </div>

 <div id="offline-returns" style="display: none;" class="yui-b offline-returns">
 <div class="yui-g">
 <form id="checkin-form" method="post" action="/cgi-bin/koha/circ/returns.pl" autocomplete="off" >
 <div class="yui-u first">
 <fieldset>
 <legend>Ghi Trả</legend>
 <label for="checkin-barcode">Nhập đăng ký cá biệt: </label>
 <input name="barcode" id="checkin-barcode" size="14" class="focus"/>
 <input value="Tìm kiếm" type="submit" class="submit" />
 </fieldset>
 </div>
 </form>
 </div>

 <div id="session-returned" style="display: none;">
 <h2>Tài liệu được ghi trả</h2>
 <table id="already-checked-in">
 <thead>
 <tr><th>Nhan đề</th><th>Tác giả</th><th>Đăng ký cá biệt</th><th>Thư viện chính</th><th>Thư viện sở hữu</th><th>Kho tài liệu</th><th>Ký hiệu phân loại</th><th>Type</th></tr>
 </thead>
 <tbody>
 </tbody>
 </table>
 </div>
 </div>

 <div style="display: none;" class="yui-b offline-circulation-instructions">
 <div class="yui-g">
 Nhập số thẻ bạn đọc để bắt đầu. </div>
 </div>

 <div id="offline-circulation" style="display: none;" class="yui-b offline-circulation">
 <div class="yui-g">
 <form method="post" action="/cgi-bin/koha/circ/offline.pl" id="mainform" name="mainform" autocomplete="off">
 <fieldset id="circ_circulation_issue">
 <span id="clearscreen"><a href="/cgi-bin/koha/circ/offline.pl" title="Xóa màn hình">x</a></span>
 <label for="checkout-barcode">Ghi mượn tới bạn đọc <span class="patron-title"></span></label>
 <div class="hint">Nhập đăng ký cá biệt:</div>
 <input type="text" name="barcode" id="checkout-barcode" class="barcode focus" size="14" />
 <input type="submit" value="Ghi mượn" />

 <div class="date-select">
 <div class="hint">Xác định ngày hết hạn [% INCLUDE 'date-format.inc' %]: </div>
 <input type="text" size="13" id="duedatespec" name="duedatespec" value="[% duedatespec %]" />
 <label for="stickyduedate"> Lưu phiên làm việc:</label>
 <input type="checkbox" id="stickyduedate" onclick="this.form.barcode.focus();" name="stickyduedate" checked="checked" />
 <input id="cleardate" name="cleardate" type="button" class="action" onclick="this.checked = false; this.form.duedatespec.value = ''; this.form.stickyduedate.checked = false; this.form.barcode.focus(); return false;" value="Xóa" />
 </div>
 </fieldset>
 </form>
 </div>

 <div class="yui-g"><div id="patronlists" class="toptabs">
 <ul>
 <li><a href="#checkouts"><span class="checkout-count"></span> Ghi mượn</a></li>
 <li><a href="#fines"><span class="fine-amount"></span> trong tiền phạt</a></li>
 </ul>

 <!-- SUMMARY : TODAY & PREVIOUS ISSUES -->
 <div id="checkouts">
 <div id="session-issues">
 <table id="issuest">
 <thead><tr>
 <th scope="col">Ngày hết hạn</th>
 <th scope="col">Nhan đề</th>
 <th scope="col">Đăng ký cá biệt</th>
 <th scope="col">Kiểu tài liệu</th>
 <th scope="col">Ngày ghi mượn</th>
 <th scope="col">Nơi ghi mượn</th>
 <th scope="col">Ký hiệu phân loại</th>
 <th scope="col">Phí</th>
 </tr></thead>
 <tbody>
 </tbody>
 </table>
 </div>

 <div id="oldissues">
 <h5>Ghi mượn trước đây</h5>
 <table id="oldissuest">
 <thead><tr>
 <th scope="col">Ngày hết hạn</th>
 <th scope="col">Nhan đề</th>
 <th scope="col">Đăng ký cá biệt</th>
 <th scope="col">Kiểu tài liệu</th>
 <th scope="col">Ngày ghi mượn</th>
 <th scope="col">Nơi ghi mượn</th>
 <th scope="col">Ký hiệu phân loại</th>
 <th scope="col">Phí</th>
 </tr></thead>
 <tbody>
 </tbody>
 </table>
 </div>
 </div>

 <div id="fines">
 <span class="patron-title"></span> đã <span class="fine-amount"></span> . Bạn có thể thanh toán khoản tiền phạt này cho thư viện. <fieldset><legend>Thanh toán</legend>
 <label for="pay-fine-amount">Số lượng tiền phạt: </label><input type="text" name="pay-fine-amount" id="pay-fine-amount"/>
 <button id="pay-fine" class="submit">Thanh toán</button>

 <table id="session-payments" style="display: none;">
 <thead><tr><th>Số lượng</th><th>Thời gian thanh toán</th></tr></thead>
 <tbody></tbody>
 </table>
 </fieldset>
 </div>
 </div>
 </div>
 </div>
 </div>

 <div class="yui-b offline-circulation" style="display: none;">
 <div class="patroninfo"><h5 class="patron-title">&nbsp;</h5>
 <ul>
 <li id="patron-address-1"></li>
 <li id="patron-address-2"></li>
 <li id="patron-address-parts"><!-- city, state, zipcode, country --></li>
 <li id="patron-phone"></li>
 <li id="patron-email"></li>
 <li id="patron-category"></li>
 <li id="patron-library"></li>
 </ul>
 </div>
 </div>
</div>

[% MACRO jsinclude BLOCK %]
 [% INCLUDE 'calendar.inc' %]
 [% Asset.js("lib/jquery/plugins/jquery.indexeddb.js") %]
 [% Asset.js("js/offlinecirc.js") %]
 [% Asset.js("lib/jquery/plugins/jquery-ui-timepicker-addon.min.js") %]
 [% INCLUDE 'timepicker.inc' %]
 <script type="text/javascript">
        var ALERT_SUCCESSFUL_CHECKIN = _("Tài liệu được ghi trả.");
        var ALERT_MATERIALS = _("Note about the accompanying materials: %s");
        var ALERT_RESTRICTED = _("Bạn đọc bị KHÓA THẺ");
        var ALERT_NO_MATCHING_ITEM = _("No item with barcode in offline database (transaction recorded anyway): %s");
        var ALERT_NOT_CHECKED_OUT = _("Tài liệu không được ghi mượn trong CSDL lưu thông ngoại tuyến (Giao dịch vẫn được lưu lại)");
        var ALERT_ITEM_WITHDRAWN = _("Tài liệu bị rút khỏi lưu thông (Giao dịch vẫn được lưu lại)");
        var ALERT_ITEM_RESTRICTED = _("Tài liệu bị hạn chế (Giao dịch vẫn được lưu lại)");
        var ALERT_ITEM_LOST = _("Tài liệu đã bị mất (Giao dịch vẫn được lưu lại)");
        var ALERT_NO_MATCHING_PATRON = _("No patron cardnumber in offline database (proceeding anyway): %s");
        var ALERT_PATRON_GONE_NO_ADDRESS = _("Địa chỉ bạn đọc không chính xác (Hệ thống tiếp tục xử lý)");
        var ALERT_PATRON_CARD_LOST = _("Bạn đọc bị mất thẻ");
        var ALERT_PATRON_EXPIRED = _("Patron's card is expired (%s)");
        var ALERT_PATRON_BLOCKED_TEMPORARY = _("Patron has had overdue items and is restricted until: %s");
        var ALERT_PATRON_RESTRICTED = _("Bạn đọc bị KHÓA THẺ");
        var ALERT_PATRON_FINE = _("Patron has outstanding fines: %s");
        var ALERT_PATRON_FINE_OVER_LIMIT = _("Patron fines are over limit: %s");
        var UPLOAD_PENDING_MESSAGE = _("Bạn có giao dịch lưu thông trong cơ sở dữ liệu lưu thông ngoại tuyến trên máy tính, các giao dịch này chưa được tải lên cơ sở dữ liệu Koha.");
        var NO_UPLOAD_PENDING_MESSAGE = _("Bạn không có bất kỳ giao dịch lưu thông chờ xử lý trong cở sở dữ liệu lưu thông ngoại tuyến trên máy tính của bạn.");

        var start;

        var dateformat = '[% IF ( dateformat_us ) %]mm/dd/yy[% ELSIF ( dateformat_metric ) %]dd/mm/yy[% ELSE %]yy-mm-dd[% END %]';

        function checkin(barcode, item, error) {
            var alerts = checkAlerts(barcode, item);
            if (typeof item === 'undefined') {
                item = { };
            }
            item.title = item.title || _("(Không rõ)");
            item.author = item.author || _("(Không rõ)");
            item.homebranch = item.homebranch || "";
            item.holdingbranch = item.holdingbranch || "";
            item.callnumber = item.callnumber || "";
            item.itemtype = item.itemtype || "";
            item.barcode = item.barcode || barcode;
            var trans = { "timestamp" : new Date().toMySQLString(),
                          "barcode" : barcode,
                          "action" : "return"
                        };
            $('#alerts').empty();
            $('.offline-home').hide();
            $('.offline-sync').hide();
            $('.offline-circulation').hide();
            $('.offline-circulation-instructions').hide();
            $('.offline-returns').show();
            kohadb.recordTransaction(trans, function () {
                $('#session-returned').show();
                $('#already-checked-in tbody').prepend('<tr><td>' + item.title + '</td><td>' + item.author + '</td><td>' + barcode + '</td><td>' + item.homebranch + '</td><td>' + item.holdingbranch + '</td><td></td><td>' + item.callnumber + '</td><td>' + item.itemtype + '</td></tr>');
                if (alerts.length > 0) {
                    $('#alerts').append('<div class="dialog alert"><h3>' + _("Tin nhắn ghi trả tài liệu") + '</h3></div>');
                    for (var msg in alerts) {
                        $('#alerts .dialog').append('<p>' + alerts[msg] + '</p');
                    }
                } else {
                    $('#alerts').append('<div class="dialog"><h3>' + ALERT_SUCCESSFUL_CHECKIN + '</h3></div>');
                }
            });
            setTimeout(function() { $('#checkin-barcode').trigger('focus'), 1 });
        }

        function checkAlerts(barcode, item) {
            var alerts = [];
            if (typeof item === 'undefined') {
                alerts.push(ALERT_NO_MATCHING_ITEM.format(barcode));
            } else {
                if (typeof item.materials !== 'undefined' && item.materials != null) {
                    alerts.push(ALERT_MATERIALS.format(item.materials));
                }
            }
            return alerts;
        }

        function showSyncInfo() {
            kohadb.loadSetting("item-timestamp", showTimestamp);
            kohadb.loadSetting("patron-timestamp", showTimestamp);
            kohadb.loadSetting("issue-timestamp", showTimestamp);
            kohadb.loadSetting("dirty", function (key, val) {
                if (val) {
                    $('#upload-message').text(UPLOAD_PENDING_MESSAGE);
                } else {
                    $('#upload-message').text(NO_UPLOAD_PENDING_MESSAGE);
                }
            });
        }

        function synchronize() {
            kohadb.saveSetting("userid", "[% loggedinusername %]");
            kohadb.saveSetting("branchcode", "[% LoginBranchcode %]");
            showSyncInfo();
            [% UNLESS (AllowOfflineCirculation) %]
                reloadRecords();
            [% END %]
            showSyncInfo();
            $('#download-records').click(reloadRecords);
            $('#upload-transactions').click(function () {
                $('.loading-overlay div').text(_("Đang tải giao dịch lưu thông lên Koha, bạn vui lòng chờ..."));
                $('.loading-overlay').show();
                $.ajax({
                    type: "GET",
                    url: "/cgi-bin/koha/offline_circ/service.pl",
                }).done(function (data) {
                    if (data) {
                        $('.loading-overlay').hide();
                        alert(_("Bạn vui lòng đăng nhập vào Koha và thử lại. (Lỗi: '%s')").format(data));
                    } else {
                        var uploadIter = $.indexedDB("koha").objectStore("transactions").each(uploadTransaction);
                        uploadIter.done(function() {
                            $.indexedDB("koha").transaction(["transactions"]).then(function(){
                            }, function(err, e){
                            }, function(transaction){
                                transaction.objectStore("transactions").clear();
                            });
                            $('.loading-overlay').hide();
                            kohadb.saveSetting("dirty", false);
                            $('#upload-message').text(NO_UPLOAD_PENDING_MESSAGE);
                        });
                    }
                });
            });

        }

        function showTimestamp(key, value) {
            if (typeof value !== 'undefined') {
                var ts = new Date(value);
                $('#' + key).text($.datepicker.formatDate(dateformat, ts) + ' ' + ts.toTimeString());
            } else {
                $('#' + key).text(_("(không)"));
            }
        }

        function reloadRecords(ev) {
            $(".loading-overlay div").text(_("Đang tải dữ liệu, bạn vui lòng chờ..."));
            $(".loading-overlay").show();
            start = new Date();
            $.indexedDB("koha").transaction(["patrons", "items", "issues"]).then(function(){
                loadRecords(0);
            }, function(err, e){
            }, function(transaction){
                transaction.objectStore("patrons").clear();
                transaction.objectStore("items").clear();
                transaction.objectStore("issues").clear();
            });
            if (typeof ev !== 'undefined') {
                ev.stopPropagation();
            }
        }

        function uploadTransaction(transaction) {
            $.ajax({
                type: "POST",
                url: "/cgi-bin/koha/offline_circ/service.pl",
                data: { "userid" : kohadb.settings.userid,
                        "branchcode" : kohadb.settings.branchcode,
                        "timestamp" : transaction.value.timestamp,
                        "action" : transaction.value.action,
                        "barcode" : transaction.value.barcode,
                        "cardnumber" : transaction.value.cardnumber,
                        "amount" : transaction.value.amount,
                        "pending" : true,
                      },
            });
            return undefined, true;
        }

        function finishedLoading() {
            kohadb.saveSetting('item-timestamp', start.toISOString())
            kohadb.saveSetting('patron-timestamp', start.toISOString())
            kohadb.saveSetting('issue-timestamp', start.toISOString())
            showTimestamp('item-timestamp', start.toISOString());
            showTimestamp('patron-timestamp', start.toISOString());
            showTimestamp('issue-timestamp', start.toISOString());
            $(".loading-overlay").hide();
        }

        function loadRecords(page) {
        [% IF (AllowOfflineCirculation) %]
            $(".loading-overlay div").text(_("Đang tải dữ liệu %s, bạn vui lòng chờ...").format(page));
            $(".loading-overlay").show();
            $.ajax({
                type: "GET",
                url: "/cgi-bin/koha/offline_circ/download.pl",
                data: { "data": "all",
                        "page": page
                      },
                dataType: "json",
            }).done(function (data) {
                $.indexedDB("koha").transaction(["patrons", "items", "issues"]).then(function(){
                    if (data.finished) {
                        finishedLoading();
                    } else {
                        setTimeout(function () { loadRecords(page + 1); }, 200);
                    }
                }, function(err, e){
                }, function(transaction){
                    if (data.patrons) {
                        var patrons = transaction.objectStore("patrons");
                        $.each(data.patrons, function () {
                            patrons.put(this);
                        });
                    }
                    if (data.items) {
                        var items = transaction.objectStore("items");
                        $.each(data.items, function () {
                            items.put(this);
                        });
                    }
                    if (data.issues) {
                        var issues = transaction.objectStore("issues");
                        $.each(data.issues, function () {
                            issues.put(this);
                        });
                    }
                });
            });
        [% END %]
        }

        function validate1(date) {
            var today = new Date();
            if ( date < today ) {
                return true;
             } else {
                return false;
             }
        };

        function loadPatron(barcode) {
            $('#oldissues').hide();
            $('#session-issues').hide();
            $('#issuest tbody').empty();
            $('#session-payments').hide();
            $('.checkout-count').text(0);
            $.indexedDB("koha").transaction(["patrons", "issues"]).then(function() {
            }, function(err, e){
            }, function(transaction){
                var patrons = transaction.objectStore("patrons");
                patrons.get(barcode).done(function (patron, error) {
                    showPatron(barcode, patron, error);
                });
                var issuesidx = transaction.objectStore("issues").index("cardnumber");
                $('#oldissuest tbody').empty();
                issuesidx.each(function (item) {
                    $('#oldissues').show();
                    $('#oldissuest tbody').append("<tr><td>" + item.value.date_due + "</td><td>" + item.value.title + "</td><td>" + item.value.barcode + "</td><td>" + item.value.itype + "</td><td>" + item.value.issuedate + "</td><td>" + item.value.issuebranch + "</td><td>" + item.value.callnumber + "</td><td>" + "" + "</td></tr>");
                    $('.checkout-count').text(parseInt($('.checkout-count').text()) + 1);
                }, barcode);
            });
        }

        function checkout(barcode, item, error) {
            var alerts = checkAlerts(barcode, item);
            if (typeof item === 'undefined') {
                item = { };
            }
            item.title = item.title || "";
            item.author = item.author || "";
            item.homebranch = item.homebranch || "";
            item.holdingbranch = item.holdingbranch || "";
            item.callnumber = item.callnumber || "";
            item.itemtype = item.itemtype || "";
            if ($('#duedatespec').val().length === 0) {
                alert(_("Bạn phải thiết lập ngày hết hạn cho ghi mượn trong lưu thông ngoại tuyến!"));
                setTimeout(function() { $('#duedatespec').trigger('focus'), 1 });
                return;
            }
            var date_due = new Date($('#duedatespec').datepicker('getDate'));
            var trans = { "timestamp" : new Date().toMySQLString(),
                          "barcode" : barcode,
                          "cardnumber" : curpatron.cardnumber,
                          "date_due" : date_due.toMySQLString(),
                          "action" : "issue"
                        };
            $('#alerts').empty();
            kohadb.recordTransaction(trans, function () {
                $('#session-issues').show();
                $('#issuest tbody').prepend('<tr><td>' + $.datepicker.formatDate(dateformat, date_due) + date_due.toTimeString() + '</td><td>' + item.title + '</td><td>' + barcode + '</td><td>' + item.itemtype + '</td><td>' + $.datepicker.formatDate(dateformat, new Date()) + '</td><td>' + kohadb.settings.branchcode + '</td><td>' + item.callnumber + '</td><td></td></tr>');
                $('.checkout-count').text(parseInt($('.checkout-count').text()) + 1);
                if (alerts.length > 0) {
                    $('#alerts').append('<div class="dialog alert"><h3>' + _("Tin nhắn ghi mượn") + '</h3></div>');
                    for (var msg in alerts) {
                        $('#alerts .dialog').append('<p>' + alerts[msg] + '</p');
                    }
                }
                $('#checkout-barcode').val('');
            });
        }

        function recordFine(amount) {
            var timestamp = new Date()
            var trans = { "timestamp" : timestamp.toMySQLString(),
                          "cardnumber" : curpatron.cardnumber,
                          "amount" : amount,
                          "action" : "payment",
                        };
            kohadb.recordTransaction(trans, function () {
                $('#session-payments').show();
                $('#session-payments tbody').prepend('<tr><td>' + amount + '</td><td>' + $.datepicker.formatDate(dateformat, timestamp) + timestamp.toTimeString() + '</td></tr>');
                $('.fine-amount').text(parseInt($('.fine-amount').text()) - amount);
            });
        }

        function checkPatronAlerts(cardnumber, patron) {
            var alerts = [];
            if (typeof patron === 'undefined') {
                alerts.push(ALERT_NO_MATCHING_PATRON.format(cardnumber));
            } else {
                if (patron.gonenoaddress !== '0') {
                    alerts.push(ALERT_PATRON_GONE_NO_ADDRESS);
                }
                if (patron.lost !== '0') {
                    alerts.push(ALERT_PATRON_CARD_LOST);
                }
                if (patron.debarred !== null) {
                    if (patron.debarred != '9999-12-31') {
                        alerts.push(ALERT_PATRON_BLOCKED_TEMPORARY.format($.datepicker.formatDate(dateformat, new Date(patron.debarred))));
                    } else {
                        alerts.push(ALERT_PATRON_RESTRICTED);
                    }
                }
                if (new Date(patron.dateexpiry) < new Date()) {
                    alerts.push(ALERT_PATRON_EXPIRED.format($.datepicker.formatDate(dateformat, new Date(patron.dateexpiry))));
                }
                if (parseInt(patron.fine) > [% maxoutstanding %]) {
                    alerts.push(ALERT_PATRON_FINE_OVER_LIMIT.format(patron.fine));
                } else if (parseInt(patron.fine) > 0) {
                    alerts.push(ALERT_PATRON_FINE.format(patron.fine));
                }
            }
            return alerts;
        }

        var curpatron;

        function showPatron(barcode, patron, error) {
            var alerts = checkPatronAlerts(barcode, patron);
            if (typeof patron === 'undefined') {
                patron = { };
            }
            patron.surname = patron.surname || "";
            patron.firstname = patron.firstname || "";
            patron.othernames = patron.othernames || "";
            patron.address = patron.address || "";
            patron.address2 = patron.address2 || "";
            patron.city = patron.city || "";
            patron.state = patron.state || "";
            patron.country = patron.country || "";
            patron.zipcode = patron.zipcode || "";
            patron.phone = patron.phone || "";
            patron.mobile = patron.mobile || "";
            patron.phonepro = patron.phonepro || "";
            patron.email = patron.email || "";
            patron.emailpro = patron.emailpro || "";
            patron.categorycode = patron.categorycode || "";
            patron.branchcode = patron.branchcode || "";
            patron.cardnumber = barcode;
            patron.fine = patron.fine || "0";

            patron.name = patron.firstname + (patron.othernames.length > 0 ? " (" + patron.othernames + ") " : " ") + patron.surname + " (" + barcode + ")";
            if (patron.name.length > 0) {
                $('.patron-title').text(patron.name);
            } else {
                $('.patron-title').text(_("Không tìm thấy bạn đọc (%s) trong cơ sở dữ liệu").format(barcode));
            }
            if (patron.address.length > 0 || patron.address2.length > 0) {
                $('#patron-address-1').text(patron.address);
                $('#patron-address-2').text(patron.address2);
            } else {
                $('#patron-address-1').html('<span class="empty" id="noaddressstored">' + _("Không có địa chỉ.") + '</span></li>');
                $('#patron-address-2').text('');
            }
            if (patron.city.length > 0) {
                $('#patron-address-parts').text(patron.city + (patron.state.length > 0 ? ", " + patron.state : "") + " " + patron.zipcode + (patron.country.length > 0 ? ", " + patron.country : ""));
            } else {
                $('#patron-address-parts').html('<span class="empty" id="nocitystored">' + _("Không có thành phố.") + '</span></li>');
            }
            if (patron.phone.length > 0 || patron.mobile.length > 0 || patron.phonepro.length > 0) {
                $('#patron-phone').text((patron.phone.length > 0 ? patron.phone : (patron.mobile.length > 0 ? patron.mobile : (patron.phonepro.length > 0 ? patron.phonepro : ''))));
            } else {
                $('#patron-phone').html('<span class="empty" id="nophonestored">' + _("Không có điện thoại.") + '</span></li>');
            }
            if (patron.email.length > 0 || patron.emailpro.length > 0) {
                $('#patron-email').text((patron.email.length > 0 ? patron.email : (patron.emailpro.length > 0 ? patron.emailpro : "")));
            } else {
                $('#patron-email').html('<span class="empty" id="noemailstored">' + _("Không có thư điện tử.") + '</span></li>');
            }
            if (patron.categorycode.length > 0) {
                $('#patron-category').text(_("Kiểu bạn đọc: %s").format(patron.categorycode));
            } else {
                $('#patron-category').html('<span class="empty" id="unknowncategory">' + _("Không có kiểu bạn đọc.") + '</span></li>');
            }
            if (patron.branchcode.length > 0) {
                $('#patron-library').text(_("Thư viện chính: %s").format(patron.branchcode));
            } else {
                $('#patron-library').html('<span class="empty" id="unknowncategory">' + _("Không có thư viện.") + '</span></li>');
            }
            $('.fine-amount').text(patron.fine);
            $('#alerts').empty();
            if (alerts.length > 0) {
                $('#alerts').append('<div class="dialog alert"><h3>' + _("Tin nhắn ghi mượn") + '</h3></div>');
                for (var msg in alerts) {
                    $('#alerts .dialog').append('<p>' + alerts[msg] + '</p>');
                }
            }
            curpatron = patron;
            $('#yui-main').show();
            setTimeout(function() { $('#checkout-barcode').trigger('focus'), 1 });
        }

        // This next bit of code is to deal with the updated session issue
        window.addEventListener('load', function(e) {
            window.applicationCache.addEventListener('updateready', function(e) {
                if (window.applicationCache.status == window.applicationCache.UPDATEREADY) {
                    // Browser downloaded a new app cache.
                    // Swap it in and reload the page to get the new hotness.
                    window.applicationCache.swapCache();
                    if (confirm(_("Phiên bản mới của giao diện này đã sẵn sàng. Bạn có muốn tải về?"))) {
                        window.location.reload();
                    }
                } else {
                // Manifest didn't changed. Nothing new to server.
                }
            }, false);
        }, false);


        $(document).ready(function () {
            kohadb.initialize();
            $('#header_search #circ_search .tip').text(_("Nhập số thẻ bạn đọc:"));

            $('ul[aria-labelledby="logged-in-menu"]').html('<li><a class="toplinks">' + _("You cannot change your branch or logout while using offline circulation") + '</a></li>');

            // Returns code
            $('#checkin-form, #checkin_search form').submit(function (event) {
                event.preventDefault();
                var barcode = $('input[name="barcode"]', this).val();
                $('input[name="barcode"]', this).val('');
                $.indexedDB("koha").transaction(["items"]).then(function() {
                }, function(err, e){
                }, function(transaction){
                    var items = transaction.objectStore("items");
                    items.get(barcode).done(function (item, error) {
                        checkin(barcode, item, error);
                    });
                });
            });

            $('#go-to-home').click(function () {
                $('#alerts').empty();
                $('.offline-sync').hide();
                $('.offline-circulation').hide();
                $('.offline-returns').hide();
                $('.offline-circulation-instructions').hide();
                $('.offline-home').show();
            });

            $('#go-to-returns').click(function () {
                $('#alerts').empty();
                $('.offline-home').hide();
                $('.offline-sync').hide();
                $('.offline-circulation').hide();
                $('.offline-circulation-instructions').hide();
                $('.offline-returns').show();
                setTimeout(function() { $('#checkin-form input[name="barcode"]').trigger('focus'), 1 });
            });

            $('#go-to-circ').click(function () {
                $('#alerts').empty();
                $('.offline-home').hide();
                $('.offline-sync').hide();
                $('.offline-returns').hide();
                $('.offline-circulation').hide();
                $('.offline-circulation-instructions').show();
                $('#header_search').tabs("option", "active", 0);
                setTimeout(function() { $('#circ_search input[name="findborrower"]').trigger('focus'), 1 });
            });

            $('#go-to-sync').click(function () {
                $('#alerts').empty();
                showSyncInfo();
                $.ajax({
                    type: "GET",
                    url: "/cgi-bin/koha/offline_circ/list.pl",
                    success: function () {
                        $('.offline-home').hide();
                        $('.offline-returns').hide();
                        $('.offline-circulation').hide();
                        $('.offline-circulation-instructions').hide();
                        $('.offline-sync').show();
                        synchronize();
                    },
                    error: function () {
                        alert(_("Bạn không thể kết nối tới máy chủ, do đó bạn không thể đồng bộ cơ sở dữ liệu hệ thống của bạn"));
                    }
                });
            });

            $('#go-to-pending').click(function (ev) {
                $('#alerts').empty();
                ev.preventDefault();
                $.ajax({
                    type: "GET",
                    url: "/cgi-bin/koha/offline_circ/list.pl",
                    success: function () {
                        window.location = '/cgi-bin/koha/offline_circ/list.pl';
                    },
                    error: function () {
                        alert(_("Bạn không thể kết nối tới máy chủ, do đó bạn không thể xử lý các giao dịch lưu thông"));
                    }
                });
            });

            $('#patronsearch').submit(function (event) {
                event.preventDefault();
                loadPatron($('#findborrower').val());
                $('.offline-home').hide();
                $('.offline-returns').hide();
                $('.offline-sync').hide();
                $('.offline-circulation-instructions').hide();
                $('.offline-circulation').show();
                $('#findborrower').val('');
                setTimeout(function() { $('#checkout-barcode').trigger('focus'), 1 });
            });

            $('#pay-fine').click(function (event) {
                event.preventDefault();
                recordFine($('#pay-fine-amount').val());
            });

            $('#patronlists').tabs();

            $("#newduedate").datetimepicker({
                minDate: 1, // require that renewal date is after today
                hour: 23,
                minute: 59
            });
            $("#duedatespec").datetimepicker({
                onClose: function(dateText, inst) {
                    if (validate_date(dateText, inst) ) {
                        setTimeout(function() { $('#checkout-barcode').trigger('focus'), 1 });
                    }
                },
                hour: 23,
                minute: 59
            }).on("change", function(e, value) {
                if ( ! is_valid_date( $(this).val() ) ) {$(this).val("");}
            });
            $('#mainform').submit(function (event) {
                event.preventDefault();
                var barcode = $('#checkout-barcode').val();
                $.indexedDB("koha").transaction(["items"]).then(function() {
                }, function(err, e){
                }, function(transaction){
                    var items = transaction.objectStore("items");
                    items.get(barcode).done(function (item, error) {
                        checkout(barcode, item, error);
                    });
                });
            });
        });
    </script>
[% END %]

[% INCLUDE 'intranet-bottom.inc' %]
